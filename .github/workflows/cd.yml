name: CD

# **What it does**: Automatically generates releases and release notes.
# **Why we have it**: Allows development to focus on higher value work.

on:
    push:
        branches:
            - main
    # Allows this workflow to be run manually from the Actions tab
    workflow_dispatch:

permissions:
    contents: read

jobs:
    release:
        name: Create/Update Release Pull Request
        runs-on: ubuntu-latest
        permissions:
            contents: write
            pull-requests: write
        outputs:
            release_created: ${{ steps.release.outputs.release_created }}
            tag_name: ${{ steps.release.outputs.tag_name }}
            upload_url: ${{ steps.release.outputs.upload_url }}
        steps:
            - name: Release Please
              id: release
              uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
              with:
                  config-file: .github/release-please/config.json
                  manifest-file: .github/release-please/manifest.json

    assets:
        name: Create and Upload Release Asset
        needs: release
        if: needs.release.outputs.release_created == 'true'
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Check out repo
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  persist-credentials: false

            - name: Setup Node
              uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
              with:
                  cache: npm
                  check-latest: true
                  node-version: lts/*

            - name: Install
              run: npm ci --ignore-scripts

            - name: Build
              run: npm run build

            - name: Remove dev values from package.json and package-lock.json
              run: |
                  npm pkg delete commitlint devDependencies jest scripts
                  npm pkg set scripts.start="node ."
                  npm i --ignore-scripts

            - name: Create release asset
              run: >
                  zip -r ${{ github.event.repository.name }}-${{ needs.release.outputs.tag_name }}.zip
                  .dockerignore .env.template .pm2.config.js
                  docker-compose.yml Dockerfile LICENSE
                  package.json package-lock.json README.md
                  dist ocr_lang_data .npmrc

            - name: Upload release asset
              uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1.0.2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ needs.release.outputs.upload_url }}
                  asset_path: ./${{ github.event.repository.name }}-${{ needs.release.outputs.tag_name }}.zip
                  asset_name: ${{ github.event.repository.name }}-${{ needs.release.outputs.tag_name }}.zip
                  asset_content_type: application/zip
